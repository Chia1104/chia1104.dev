ARG NODE_VERSION=22

FROM node:${NODE_VERSION}-alpine AS base

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
ENV TURBO_TELEMETRY_DISABLED=1

WORKDIR /app

RUN apk update && \
    apk add --no-cache \
    libc6-compat && \
    npm install -g corepack@latest && \
    corepack enable pnpm && \
    pnpm add -g turbo

FROM base AS builder

COPY . .

RUN turbo prune --scope=www --docker

FROM base AS installer

COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=builder /app/out/full/ .
COPY turbo.json turbo.json

ARG TURBO_TEAM \
    TURBO_TOKEN \
    GH_PUBLIC_TOKEN \
    ZEABUR_URL \
    SHA_256_HASH \
    RAILWAY_STATIC_URL \
    UPSTASH_REDIS_REST_URL \
    UPSTASH_REDIS_REST_TOKEN \
    CACHE_PROVIDER \
    NEXT_PUBLIC_ENV \
    RAILWAY_ENVIRONMENT_NAME \
    ZEABUR_ENVIRONMENT_NAME \
    RAILWAY_PUBLIC_DOMAIN \
    INTERNAL_SERVICE_ENDPOINT \
    NEXT_PUBLIC_SERVICE_ENDPOINT \
    CF_BYPASS_TOKEN \
    CH_API_KEY

ENV TURBO_TEAM=${TURBO_TEAM} \
    TURBO_TOKEN=${TURBO_TOKEN} \
    GH_PUBLIC_TOKEN=${GH_PUBLIC_TOKEN} \
    ZEABUR_URL=${ZEABUR_URL} \
    RAILWAY_STATIC_URL=${RAILWAY_STATIC_URL} \
    SHA_256_HASH=${SHA_256_HASH} \
    UPSTASH_REDIS_REST_URL=${UPSTASH_REDIS_REST_URL} \
    UPSTASH_REDIS_REST_TOKEN=${UPSTASH_REDIS_REST_TOKEN} \
    CACHE_PROVIDER=${CACHE_PROVIDER} \
    NEXT_PUBLIC_ENV=${NEXT_PUBLIC_ENV} \
    RAILWAY_ENVIRONMENT_NAME=${RAILWAY_ENVIRONMENT_NAME} \
    ZEABUR_ENVIRONMENT_NAME=${ZEABUR_ENVIRONMENT_NAME} \
    RAILWAY_PUBLIC_DOMAIN=${RAILWAY_PUBLIC_DOMAIN} \
    SKIP_ENV_VALIDATION=1 \
    INTERNAL_SERVICE_ENDPOINT=${INTERNAL_SERVICE_ENDPOINT} \
    NEXT_PUBLIC_SERVICE_ENDPOINT=${NEXT_PUBLIC_SERVICE_ENDPOINT} \
    CF_BYPASS_TOKEN=${CF_BYPASS_TOKEN} \
    CH_API_KEY=${CH_API_KEY}

RUN pnpm i
RUN pnpm turbo run build --filter=www...

FROM base AS runner

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

USER nextjs

COPY --from=installer /app/apps/www/package.json .
COPY --from=installer /app/apps/www/public ./apps/www/public

COPY --from=installer --chown=nextjs:nodejs /app/apps/www/.next/standalone ./
COPY --from=installer --chown=nextjs:nodejs /app/apps/www/.next/static ./apps/www/.next/static

ENV PORT=8080 \
    NODE_ENV=production \
    HOST=0.0.0.0 \
    HOSTNAME=0.0.0.0

EXPOSE 8080

CMD node apps/www/server.js
