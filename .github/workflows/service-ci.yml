name: service CI

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]
    paths:
      - "apps/service/**"
      - "packages/db/**"
      - "packages/utils/**"
      - ".github/workflows/service-ci.yml"
      - "package.json"

concurrency:
  group: pull-${{ github.ref }}-service-ci
  cancel-in-progress: true

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  BETA_DATABASE_URL: ${{ secrets.BETA_DATABASE_URL }}
  ADMIN_ID: ${{ secrets.ADMIN_ID }}
  BETA_ADMIN_ID: ${{ secrets.BETA_ADMIN_ID }}
  SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
  SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
  SPOTIFY_REDIRECT_URI: http://localhost:3003
  REDIS_URI: ${{ secrets.REDIS_URI }}
  REDIS_URL: ${{ secrets.REDIS_URL }}
  ENV: beta
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
  AUTH_URL: http://localhost:3003
  NODE_VERSION: 20
  TURBO_TELEMETRY_DISABLED: 1

jobs:
  init:
    name: Init service
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.pull_request.labels.*.name, 'area:service') || contains(github.event.pull_request.labels.*.name, 'service:enhancement') || contains(github.event.pull_request.labels.*.name, 'area-service') }}

    steps:
      - name: "üêôÔ∏è Check out code"
        uses: actions/checkout@v4

      - name: "üíΩÔ∏è  Init"
        id: dash-init
        uses: ./.github/actions/install
        with:
          NODE_VERSION: ${{ env.NODE_VERSION }}

  lint:
    name: 'Lint check'
    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: 'üêôÔ∏è  Checkout'
        id: pull-checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: 'üì¶  Install'
        id: pull-install
        uses: './.github/actions/install'
        with:
          NODE_VERSION: ${{ env.NODE_VERSION }}

      - name: "üèóÔ∏è  Build"
        shell: bash
        run: |
          pnpm build --filter service...

      - name: 'üßπ  Lint check'
        id: pull-lint
        shell: bash
        run: |
          pnpm lint --filter service...
  type-check:
    name: 'Type check'
    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: 'üêôÔ∏è  Checkout'
        id: pull-checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: 'üì¶  Install'
        id: pull-install
        uses: './.github/actions/install'
        with:
          NODE_VERSION: ${{ env.NODE_VERSION }}

      - name: "üèóÔ∏è  Build"
        shell: bash
        run: |
          pnpm build --filter service...

      - name: 'üîç  TypeCheck'
        id: pull-typecheck
        shell: bash
        run: |
          pnpm type:check --filter service...
  unit-test:
    name: 'Unit test'
    timeout-minutes: 20
    runs-on: ubuntu-latest
    needs: init
    steps:
      - name: 'üêôÔ∏è  Checkout'
        id: pull-checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: 'üì¶  Install'
        id: pull-install
        uses: './.github/actions/install'
        with:
          NODE_VERSION: ${{ env.NODE_VERSION }}

      - name: "üèóÔ∏è  Build"
        shell: bash
        run: |
          pnpm build --filter service...

      - name: 'üß™  Unit test'
        id: pull-unit-test
        shell: bash
        run: |
          pnpm test --filter service...