name: www Docker CI

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]
    paths:
      - "apps/www/**"
      - "packages/**"
      - ".github/workflows/www-docker.yml"
      - "package.json"

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: pull-${{ github.ref }}-www-docker-ci
  cancel-in-progress: true

env:
  APP_CODE: www
  GH_PUBLIC_TOKEN: ${{ secrets.GH_PUBLIC_TOKEN }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  SHA_256_HASH: ${{ secrets.SHA_256_HASH }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  GIT_HASH: ${{ github.sha }}
  REDIS_URL: ${{ secrets.REDIS_URL }}
  UPSTASH_TOKEN: ${{ secrets.UPSTASH_TOKEN }}
  CACHE_PROVIDER: upstash
  NODE_ENV: test
  NEXT_PUBLIC_ENV: beta
  TURBO_TELEMETRY_DISABLED: 1
  INTERNAL_SERVICE_ENDPOINT: ${{ secrets.BETA_INTERNAL_SERVICE_ENDPOINT }}
  NEXT_PUBLIC_SERVICE_ENDPOINT: ${{ secrets.BETA_NEXT_PUBLIC_SERVICE_ENDPOINT }}
  CF_BYPASS_TOKEN: ${{ secrets.CF_BYPASS_TOKEN }}
  CH_API_KEY: ${{ secrets.WWW_CH_API_KEY }}

jobs:
  build:
    name: "www docker build"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: ${{ (contains(github.event.pull_request.labels.*.name, 'www:docker') || contains(github.event.pull_request.labels.*.name, 'www:enhancement')) && !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Set up Docker Builder
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.www
          push: false
          load: false
          tags: ${{ env.DOCKERHUB_USERNAME }}/chia1104-www:${{ env.GIT_HASH }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GH_PUBLIC_TOKEN=${{ env.GH_PUBLIC_TOKEN }}
            TURBO_TEAM=${{ env.TURBO_TEAM }}
            TURBO_TOKEN=${{ env.TURBO_TOKEN }}
            SHA_256_HASH=${{ env.SHA_256_HASH }}
            REDIS_URL=${{ env.REDIS_URL }}
            UPSTASH_TOKEN=${{ env.UPSTASH_TOKEN }}
            CACHE_PROVIDER=upstash
            NEXT_PUBLIC_ENV=${{ env.NEXT_PUBLIC_ENV }}
            INTERNAL_SERVICE_ENDPOINT=${{ env.INTERNAL_SERVICE_ENDPOINT }}
            NEXT_PUBLIC_SERVICE_ENDPOINT=${{ env.NEXT_PUBLIC_SERVICE_ENDPOINT }}
            CF_BYPASS_TOKEN=${{ env.CF_BYPASS_TOKEN }}
            CH_API_KEY=${{ env.CH_API_KEY }}
