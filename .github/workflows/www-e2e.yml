name: www E2E tests

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]
    paths:
      - "apps/www/**"
      - "packages/**"
      - ".github/workflows/www-e2e.yml"
      - "tests/www-e2e/**"
      - "package.json"

env:
  GH_PUBLIC_TOKEN: ${{ secrets.GH_PUBLIC_TOKEN }}
  NEXT_PUBLIC_RE_CAPTCHA_KEY: ${{ secrets.NEXT_PUBLIC_RE_CAPTCHA_KEY }}
  RE_CAPTCHA_KEY: ${{ secrets.RE_CAPTCHA_KEY }}
  GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
  SPOTIFY_CLIENT_ID: ${{ secrets.SPOTIFY_CLIENT_ID }}
  SPOTIFY_CLIENT_SECRET: ${{ secrets.SPOTIFY_CLIENT_SECRET }}
  SPOTIFY_FAVORITE_PLAYLIST_ID: ${{ secrets.SPOTIFY_FAVORITE_PLAYLIST_ID }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  SHA_256_HASH: ${{ secrets.SHA_256_HASH }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  NODE_VERSION: 20
  PNPM_VERSION: 9.3.0
  GIT_HASH: ${{ github.sha }}
  RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
  NEXT_PUBLIC_UMAMI_WEBSITE_ID: ${{ secrets.NEXT_PUBLIC_UMAMI_WEBSITE_ID }}
  NEXT_PUBLIC_UMAMI_URL: ${{ secrets.NEXT_PUBLIC_UMAMI_URL }}
  UMAMI_DB_URL: ${{ secrets.UMAMI_DB_URL }}
  UMAMI_EDGE_DB_URL: ${{ secrets.UMAMI_EDGE_DB_URL }}
  NEXT_PUBLIC_GISCUS_REPO_ID: ${{ secrets.NEXT_PUBLIC_GISCUS_REPO_ID }}
  NEXT_PUBLIC_GISCUS_CATEGORY_ID: ${{ secrets.NEXT_PUBLIC_GISCUS_CATEGORY_ID }}
  REDIS_URL: ${{ secrets.REDIS_URL }}
  UPSTASH_TOKEN: ${{ secrets.UPSTASH_TOKEN }}
  CACHE_PROVIDER: upstash
  NODE_ENV: test
  AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
  AUTH_URL: http://localhost:3000
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  BETA_DATABASE_URL: ${{ secrets.BETA_DATABASE_URL }}
  ADMIN_ID: ${{ secrets.ADMIN_ID }}
  BETA_ADMIN_ID: ${{ secrets.BETA_ADMIN_ID }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  NEXT_PUBLIC_ENV: beta
  TURBO_TELEMETRY_DISABLED: 1

jobs:
  build:
    name: Playwright tests
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.pull_request.labels.*.name, 'area:www') || contains(github.event.pull_request.labels.*.name, 'www:enhancement') || contains(github.event.pull_request.labels.*.name, 'area-www') }}

    container:
      image: mcr.microsoft.com/playwright:v1.44.1-jammy

    steps:
      - name: "üêôÔ∏è Check out code"
        uses: actions/checkout@v4

      - name: "üíΩÔ∏è  Init"
        id: www-init
        uses: Chia1104/chia-stack/.github/actions/init-pnpm@main
        with:
          NODE_VERSION: ${{ env.NODE_VERSION }}
          PNPM_VERSION: ${{ env.PNPM_VERSION }}

      - name: "üì¶  Install"
        id: www-install
        uses: Chia1104/chia-stack/.github/actions/pnpm-install@main
        with:
          INSTALL_COMMAND: "--filter www --filter ui --filter utils --filter tsconfig --filter root"

      #      - name: 'üì¶  Install Playwright Browsers (no cache)'
      #        run: npx playwright install --with-deps

      - name: "üì¶  Next.js cache"
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/apps/www/.next/cache
          key: ${{ runner.os }}-${{ runner.node }}-${{ hashFiles('**/pnpm-lock.yaml') }}-nextjs

      - name: "üö®Ô∏è  E2E tests"
        run: pnpm test:e2e --filter www-e2e...

      - name: "‚úÖ  Output coverage"
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: tests/www-e2e/playwright-report/
          retention-days: 30
