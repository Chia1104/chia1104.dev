name: dash CI

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]
    paths:
      - "apps/dash/**"
      - "packages/**"
      - ".github/workflows/dash-ci.yml"
      - "package.json"

concurrency:
  group: pull-${{ github.ref }}-dash-ci
  cancel-in-progress: true

env:
  APP_CODE: dash
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  NODE_ENV: test
  BETA_DATABASE_URL: ${{ secrets.BETA_DATABASE_URL }}
  ADMIN_ID: ${{ secrets.ADMIN_ID }}
  BETA_ADMIN_ID: ${{ secrets.BETA_ADMIN_ID }}
  NEXT_PUBLIC_ENV: beta
  NODE_VERSION: 20
  TURBO_TELEMETRY_DISABLED: 1
  INTERNAL_SERVICE_ENDPOINT: ${{ secrets.INTERNAL_SERVICE_ENDPOINT }}
  NEXT_PUBLIC_SERVICE_ENDPOINT: ${{ secrets.NEXT_PUBLIC_SERVICE_ENDPOINT }}

jobs:
  dash-lint:
    name: "dash lint"
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: ${{ (contains(github.event.pull_request.labels.*.name, 'area:dash') || contains(github.event.pull_request.labels.*.name, 'dash:enhancement') || contains(github.event.pull_request.labels.*.name, 'area-dash')) && !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: "🐙️ Check out code"
        uses: actions/checkout@v4

      - name: "💽️ Setup"
        id: dash-init
        uses: ./.github/actions/setup

      - name: "🧹 ES Lint"
        shell: bash
        run: |
          pnpm lint:dash

  dash-type-check:
    name: "dash type check"
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: ${{ (contains(github.event.pull_request.labels.*.name, 'area:dash') || contains(github.event.pull_request.labels.*.name, 'dash:enhancement') || contains(github.event.pull_request.labels.*.name, 'area-dash')) && !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: "🐙️ Check out code"
        uses: actions/checkout@v4

      - name: "💽️ Setup"
        id: dash-init
        uses: ./.github/actions/setup

      - name: "🧹 Type check"
        shell: bash
        run: |
          pnpm type:check --filter dash...

  dash-test:
    name: "dash test"
    timeout-minutes: 15
    runs-on: ubuntu-latest
    if: ${{ (contains(github.event.pull_request.labels.*.name, 'area:dash') || contains(github.event.pull_request.labels.*.name, 'dash:enhancement') || contains(github.event.pull_request.labels.*.name, 'area-dash')) && !contains(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - name: "🐙️ Check out code"
        uses: actions/checkout@v4

      - name: "💽️  Setup"
        id: dash-init
        uses: ./.github/actions/setup

      - name: "🧹 Test"
        shell: bash
        run: |
          pnpm test --filter dash...
